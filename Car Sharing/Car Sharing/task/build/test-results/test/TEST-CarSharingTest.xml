<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CarSharingTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2021-11-05T18:04:49" hostname="Starlins-MBP.attlocal.net" time="0.951">
  <properties/>
  <testcase name="start" classname="CarSharingTest" time="0.951"/>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Connecting to database
Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE car ALTER COLUMN ID RESTART WITH 1 [90002-200]
1. Log in as a manager 
0. Exit
> 0
?[1;31m
Start test 2?[0m
Connecting to database
Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY(ID INT NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY (ID)) [42101-200]
Table "CAR" already exists; SQL statement:
CREATE TABLE CAR (ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(20) NOT NULL UNIQUE , COMPANY_ID INT NOT NULL, CONSTRAINT fk_company FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)) [42101-200]
Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE car ALTER COLUMN ID RESTART WITH 1 [90002-200]
1. Log in as a manager 
0. Exit
> 1
1. Company list 
2. Create a company 
0. Back
> 0
1. Log in as a manager 
0. Exit
?[1;31m
Start test 3?[0m
?[1;31m
Start test 4?[0m
?[1;31m
Start test 5?[0m
?[1;31m
Start test 6?[0m
Connecting to database
Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY(ID INT NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY (ID)) [42101-200]
Table "CAR" already exists; SQL statement:
CREATE TABLE CAR (ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(20) NOT NULL UNIQUE , COMPANY_ID INT NOT NULL, CONSTRAINT fk_company FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)) [42101-200]
Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE car ALTER COLUMN ID RESTART WITH 1 [90002-200]
1. Log in as a manager 
0. Exit
> 1
1. Company list 
2. Create a company 
0. Back
> 1
The company list is empty!

1. Company list 
2. Create a company 
0. Back
> 2
Enter the company name:
> Super company
The company was created!

1. Company list 
2. Create a company 
0. Back
> 1
Choose a company: 
1. Super company
0. Back
> 0
1. Company list 
2. Create a company 
0. Back
> 2
Enter the company name:
> Another company
The company was created!

1. Company list 
2. Create a company 
0. Back
> 2
Enter the company name:
> One more company
The company was created!

1. Company list 
2. Create a company 
0. Back
> 1
Choose a company: 
1. Super company
2. Another company
3. One more company
0. Back
> 2
Another company company:
1. Car list 
2. Create a car 
0. Back
?[1;31m
Start test 7?[0m
Connecting to database
Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY(ID INT NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY (ID)) [42101-200]
Table "CAR" already exists; SQL statement:
CREATE TABLE CAR (ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(20) NOT NULL UNIQUE , COMPANY_ID INT NOT NULL, CONSTRAINT fk_company FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)) [42101-200]
Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
ALTER TABLE car ALTER COLUMN ID RESTART WITH 1 [90002-200]
1. Log in as a manager 
0. Exit
> 1
1. Company list 
2. Create a company 
0. Back
> 2
Enter the company name:
> Car To Go
The company was created!

1. Company list 
2. Create a company 
0. Back
> 2
Enter the company name:
> Drive Now
The company was created!

1. Company list 
2. Create a company 
0. Back
> 1
Choose a company: 
1. Car To Go
2. Drive Now
0. Back
> 1
Car To Go company:
1. Car list 
2. Create a car 
0. Back
> 1
The car list is empty! 

1. Car list 
2. Create a car 
0. Back
> 2
Enter the car name: 
> Hyundai Venue
1. Car list 
2. Create a car 
0. Back
> 2
Enter the car name: 
> Maruti Suzuki Dzire
1. Car list 
2. Create a car 
0. Back
> 1
1. Hyundai Venue
2. Maruti Suzuki Dzire

1. Car list 
2. Create a car 
0. Back
> 0
1. Company list 
2. Create a company 
0. Back
> 1
Choose a company: 
1. Car To Go
2. Drive Now
0. Back
> 2
Drive Now company:
1. Car list 
2. Create a car 
0. Back
> 1
The car list is empty! 

1. Car list 
2. Create a car 
0. Back
> 2
Enter the car name: 
> Lamborghini Urraco
1. Car list 
2. Create a car 
0. Back
> 1
1. Lamborghini Urraco

1. Car list 
2. Create a car 
0. Back
> 0
1. Company list 
2. Create a company 
0. Back
> 0
1. Log in as a manager 
0. Exit
> 0
]]></system-out>
  <system-err><![CDATA[org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY(ID INT NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY (ID)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.H2dataBase.handleSqlUpdate(H2dataBase.java:49)
	at carsharing.Main.main(Main.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE CAR (ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(20) NOT NULL UNIQUE , COMPANY_ID INT NOT NULL, CONSTRAINT fk_company FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.H2dataBase.handleSqlUpdate(H2dataBase.java:49)
	at carsharing.Main.main(Main.java:34)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY(ID INT NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY (ID)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.H2dataBase.handleSqlUpdate(H2dataBase.java:49)
	at carsharing.Main.main(Main.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE CAR (ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(20) NOT NULL UNIQUE , COMPANY_ID INT NOT NULL, CONSTRAINT fk_company FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.H2dataBase.handleSqlUpdate(H2dataBase.java:49)
	at carsharing.Main.main(Main.java:34)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY(ID INT NOT NULL AUTO_INCREMENT,  NAME VARCHAR(255) NOT NULL UNIQUE, PRIMARY KEY (ID)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.H2dataBase.handleSqlUpdate(H2dataBase.java:49)
	at carsharing.Main.main(Main.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CAR" already exists; SQL statement:
CREATE TABLE CAR (ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(20) NOT NULL UNIQUE , COMPANY_ID INT NOT NULL, CONSTRAINT fk_company FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.H2dataBase.handleSqlUpdate(H2dataBase.java:49)
	at carsharing.Main.main(Main.java:34)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:172)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:199)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
]]></system-err>
</testsuite>
